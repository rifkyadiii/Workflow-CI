name: CI Model Training & Docker Push

on:
  push:
    branches: [ main ]
    
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Run actions/checkout@v3
        uses: actions/checkout@v4
        
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.7'

      - name: Check Env
        run: |
          echo "Python version:"
          python --version
          echo "Conda version:"
          conda --version
          
      - name: Install dependencies
        run: |
          pip install "mlflow==2.19.0"
          conda env create -f MLProject/conda.yaml
        
      - name: Run mlflow project
        id: mlflow_run
        run: |
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate churn-env
          mlflow run ./MLProject 2>&1 | tee run_output.txt
          
      - name: Get latest MLflow run_id
        id: get_run_id
        run: |
          # Skrip canggih Anda untuk mengekstrak RUN_ID tetap di sini
          RUN_ID=$(grep -oE '[a-f0-9]{32}' run_output.txt | tail -1)
          if [ -z "$RUN_ID" ]; then
            echo "Error: Could not extract valid Run ID"
            exit 1
          fi
          echo "RUN_ID=${RUN_ID}" >> $GITHUB_ENV
          echo "Successfully extracted Run ID: ${RUN_ID}"
        
      - name: Upload to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-model-artifacts
          path: mlruns/
          
      - name: Build Docker Model
        run: |
          # Membuat Dockerfile secara manual
          cat > Dockerfile << 'EOF'
          FROM python:3.10-slim
          WORKDIR /app
          RUN pip install --no-cache-dir mlflow==2.13.0 scikit-learn pandas gunicorn
          COPY model /app/model
          EXPOSE 8080
          CMD ["mlflow", "models", "serve", "-m", "/app/model", "-h", "0.0.0.0", "-p", "8080"]
          EOF
          
          # Menyalin artefak model untuk di-build
          mkdir -p model
          cp -r mlruns/0/${{ steps.get_run_id.outputs.RUN_ID || env.RUN_ID }}/artifacts/model/* model/
          
          # Build image
          docker build -t "${{ secrets.DOCKERHUB_USERNAME }}/churn-prediction-api:latest" .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Tag Docker Image
        run: |
          docker tag "${{ secrets.DOCKERHUB_USERNAME }}/churn-prediction-api:latest" \
                     "${{ secrets.DOCKERHUB_USERNAME }}/churn-prediction-api:${{ steps.get_run_id.outputs.RUN_ID || env.RUN_ID }}"
                     
      - name: Push Docker Image
        run: |
          docker push "${{ secrets.DOCKERHUB_USERNAME }}/churn-prediction-api:latest"
          docker push "${{ secrets.DOCKERHUB_USERNAME }}/churn-prediction-api:${{ steps.get_run_id.outputs.RUN_ID || env.RUN_ID }}"