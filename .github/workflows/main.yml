name: CI Model Training & Docker Push
on:
  push:
    branches: [ main ]
    
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python for MLflow installation
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install MLflow (versi spesifik)
        run: pip install "mlflow==2.13.0"
        
      - name: Create Conda environment from file
        run: conda env create -f MLProject/conda.yaml
        
      - name: Run MLflow Project
        id: mlflow_run
        run: |
          # Aktifkan conda environment dan jalankan MLflow project
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate churn-env
          
          # Jalankan MLflow project dalam environment yang sudah aktif
          mlflow run ./MLProject 2>&1 | tee run_output.txt
          
          # Ekstrak Run ID dari output MLflow dengan berbagai pattern
          RUN_ID=""
          
          # Pattern 1: "Started run with ID"
          RUN_ID=$(grep -E "Started run with ID" run_output.txt | tail -1 | grep -oE '[a-f0-9]{32}' | head -1)
          
          # Pattern 2: "Run with id" 
          if [ -z "$RUN_ID" ]; then
            RUN_ID=$(grep -E "Run with id" run_output.txt | tail -1 | grep -oE '[a-f0-9]{32}' | head -1)
          fi
          
          # Pattern 3: Cari semua 32-character hex strings
          if [ -z "$RUN_ID" ]; then
            RUN_ID=$(grep -oE '[a-f0-9]{32}' run_output.txt | tail -1)
          fi
          
          # Pattern 4: Cek di MLflow logs directory
          if [ -z "$RUN_ID" ]; then
            if [ -d "mlruns" ]; then
              RUN_ID=$(find mlruns -name "meta.yaml" -exec dirname {} \; | grep -oE '[a-f0-9]{32}' | tail -1)
            fi
          fi
          
          # Validasi RUN_ID
          if [ -z "$RUN_ID" ] || [ ${#RUN_ID} -ne 32 ]; then
            echo "Error: Could not extract valid Run ID"
            echo "MLflow output:"
            cat run_output.txt
            echo "Checking mlruns directory:"
            if [ -d "mlruns" ]; then
              find mlruns -type f -name "meta.yaml" | head -5
            fi
            exit 1
          fi
          
          echo "RUN_ID=${RUN_ID}" >> $GITHUB_ENV
          echo "Training completed. Run ID: ${RUN_ID}"
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and Push Docker Image
        run: |
          # Validasi bahwa RUN_ID ada dan valid
          if [ -z "${{ env.RUN_ID }}" ]; then
            echo "Error: RUN_ID is empty"
            exit 1
          fi
          
          echo "Building Docker image for run: ${{ env.RUN_ID }}"
          
          # Bangun Docker image dari model yang dihasilkan oleh MLflow Run
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate churn-env
          
          mlflow models build-docker \
            --model-uri "runs:/${{ env.RUN_ID }}/model" \
            --name "${{ secrets.DOCKERHUB_USERNAME }}/churn-prediction-api"
          
          # Push image ke Docker Hub
          docker push "${{ secrets.DOCKERHUB_USERNAME }}/churn-prediction-api:latest"